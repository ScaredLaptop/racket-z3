#lang racket/base
(require ffi/unsafe)

(define-cpointer-type _Z3_app #:tag 'Z3_app)
(define-cpointer-type _Z3_apply_result #:tag 'Z3_apply_result)
(define-cpointer-type _Z3_ast #:tag 'Z3_ast)
(define-cpointer-type _Z3_ast_map #:tag 'Z3_ast_map)
(define-cpointer-type _Z3_ast_vector #:tag 'Z3_ast_vector)
(define-cpointer-type _Z3_config #:tag 'Z3_config)
(define-cpointer-type _Z3_constructor #:tag 'Z3_constructor)
(define-cpointer-type _Z3_constructor_list #:tag 'Z3_constructor_list)
(define-cpointer-type _Z3_context #:tag 'Z3_context)
(define-cpointer-type _Z3_fixedpoint #:tag 'Z3_fixedpoint)
(define-cpointer-type _Z3_func_decl #:tag 'Z3_func_decl)
(define-cpointer-type _Z3_func_entry #:tag 'Z3_func_entry)
(define-cpointer-type _Z3_func_interp #:tag 'Z3_func_interp)
(define-cpointer-type _Z3_goal #:tag 'Z3_goal)
(define-cpointer-type _Z3_model #:tag 'Z3_model)
(define-cpointer-type _Z3_optimize #:tag 'Z3_optimize)
(define-cpointer-type _Z3_param_descrs #:tag 'Z3_param_descrs)
(define-cpointer-type _Z3_params #:tag 'Z3_params)
(define-cpointer-type _Z3_parser_context #:tag 'Z3_parser_context)
(define-cpointer-type _Z3_pattern #:tag 'Z3_pattern)
(define-cpointer-type _Z3_probe #:tag 'Z3_probe)
(define-cpointer-type _Z3_rcf_num #:tag 'Z3_rcf_num)
(define-cpointer-type _Z3_simplifier #:tag 'Z3_simplifier)
(define-cpointer-type _Z3_solver #:tag 'Z3_solver)
(define-cpointer-type _Z3_solver_callback #:tag 'Z3_solver_callback)
(define-cpointer-type _Z3_sort #:tag 'Z3_sort)
(define-cpointer-type _Z3_stats #:tag 'Z3_stats)
(define-cpointer-type _Z3_symbol #:tag 'Z3_symbol)
(define-cpointer-type _Z3_tactic #:tag 'Z3_tactic)

(provide (all-defined-out))
